<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--MyBatis 全局配置文件，获取SqlSessionFactory-->
<configuration>

    <!-- 1、mybatis使用properties来引入外部properties配置文件的内容
      resource 引入类路径下资源
      url 引入网络路径或磁盘路径下资源
    -->
    <properties resource="dbconfig.properties"></properties>

    <!--2、settings包含很多重要的设置项
        setting：用来设置每一项
        name：设置项名
        value：设置项的取值
    -->
    <settings>
        <setting name="jdbcTypeForNull" value="NULL"/>
        <setting name="mapUnderscoreToCamelCase" value="true"/>

        <!--开启二级缓存开关-->
        <setting name="cacheEnabled" value="true"/>

        <!--设置延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>
    <!--3、typeAliases：别名处理器，可以为我们的java类型起别名
    -->
    <typeAliases>
        <!--typeAlias：为某个java类型起别名
            别名不区分大小写;
            type：指定要取别名的类型全类型;默认别名就是类名小写，employee
            alias：指定新的别名
            -->
        <!--
        <typeAlias type="com.huawei.mybatis.entities.Employee" alias="emp"/>
-->
        <!--批量起别名-->
        <!--package：为某个包下的所有类型批量起别名
            name：指定包名（为当前包下以及下面所有的后代包的每一个类都起一个默认别名（类名小写）
        -->
        <package name="com.huawei.mybatis.mapper.entities"/>
        <!--批量起别名的情况下，使用@Alias注解为某个类型指定新的别名-->
    </typeAliases>
    <!--4、environments：mybatis可以配置多种环境,default指定使用某种环境-->
    <environments default="dev_mysql">
        <!--environment：配置一个具体的环境信息，必须有两个标签，
            transactionManager：事务管理器
                type：事务管理器的类型;  JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory) 两个取值[Configuration类中注册的别名];
                    自定义事务管理器，实现TransactionFactory接口，type指定为全限定类名
            dataSource：数据源
                type：UNPOOLED(UnpooledDataSourceFactory) | POOLED(PooledDataSourceFactory) | JNDI(JndiDataSourceFactory)
                    自定义数据源，实现DataSourceFactory接口,type指定为全限定类名
            id代表当前环境的唯一标识-->
        <environment id="dev_mysql">
            <transactionManager type="JDBC"/>
            <!--配置数据源-->
            <dataSource type="POOLED">
                <!--可以从propertie文件中通过el表达式来取-->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>

        <environment id="dev_oracle">
            <transactionManager type="JDBC"/>

            <dataSource type="POOLED">
                <property name="driver" value="${orcl.driver}"/>
                <property name="url" value="${orcl.url}"/>
                <property name="username" value="${orcl.username}"/>
                <property name="password" value="${orcl.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--5、databaseIdProvider：支持多数据库厂商;
        type="DB_VENDOR"，VendorDatabaseIdProvider，作用就是得到数据库厂商的标识
            MySQL、Oracle、SQL Server，...
    -->
    <databaseIdProvider type="com.huawei.mybatis.mapper.config.MyDatabaseIdProvider">
        <!--为不同数据库设置别名-->
        <property name="Oracle" value="oracle"/>
        <property name="MySQL" value="mysql"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!--将我们写好的sql映射文件一定注册到全局配置文件中;
    6、mappers：将sql映射注册到全局配置中心中
    -->
    <mappers>
        <!--mapper：注册一个sql映射
            注册映射文件：
            resource：引用类路径下的sql映射文件
            url：引用网络路径或者磁盘路径下的sql映射文件
             url="file:///var/mappers/PostMapper.xml"

            注册接口：
            class：引用（注册）接口。
                1、有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下。
                2、没有sql映射文件，所有的sql都是利用注解写在接口上
                推荐，比较重要的Dao接口我们来写sql映射文件
                    不重要的，简单的Dao接口为了开发快速使用注解。
        -->
<!--        <mapper resource="mybatis/mapper/EmployeeMapper.xml"/>-->
<!--        <mapper class="com.huawei.mybatis.config.mapper.EmployeeAnnotationMapper"/>-->
        <!--批量注册-->
        <package name="com.huawei.mybatis.mapper.mapper"/>
    </mappers>

</configuration>